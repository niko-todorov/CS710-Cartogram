geom_polygon(fill=c,show.legend = TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon(fill=c,aes(fill=Murder)) +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
ggplot(crime_map,aes(x=long,y=lat,group=group,fill=Murder)) +
coord_map("polyconic") +
geom_polygon() +
scale_fill_gradientn(colors = c(max(c),hsv(1/14,.5,.95),min(c)))
source('~/Documents/CS_Courses/CS_710/Color/USArrests.R', echo=TRUE)
ggplot(crime_map,aes(x=long,y=lat,group=group)) +
coord_map("polyconic") +
geom_polygon(fill=c)
library(ggplot2)
library(patchwork)
d1=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d2=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d=expand.grid(h=seq(0,0.95,0.05), s=seq(0,0.95,0.05), v=seq(0,1,0.2))
p1=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v)))
p2=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
=======
>>>>>>> Stashed changes
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))
p3=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v))) +
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))+
geom_smooth()
stacked_plots <- p1 + p2+p3 + plot_layout(ncol = 1)
stacked_plots
library(ggplot2)
library(patchwork)
d1=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d2=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d=expand.grid(h=seq(0,0.95,0.05), s=seq(0,0.95,0.05), v=seq(0,1,0.2))
p1=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v)))
p2=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))
p3=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v))) +
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))+
geom_smooth()
stacked_plots <- p1 + p2+p3 + plot_layout(ncol = 1)
stacked_plots
install.packages("patchwork")
library(ggplot2)
library(patchwork)
d1=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d2=expand.grid(h=seq(0,1,1/12), s=seq(0,1,1/7), v=seq(0,1,1/7))
d=expand.grid(h=seq(0,0.95,0.05), s=seq(0,0.95,0.05), v=seq(0,1,0.2))
p1=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v)))
p2=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))
p3=ggplot() +
coord_polar(theta="x") +
scale_x_continuous(breaks=NULL) +
scale_y_continuous(breaks=NULL) +
scale_fill_identity() +
geom_rect(data=d1, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=s, ymax=s+resolution(s), fill=hsv(h,s,v))) +
geom_rect(data=d2, mapping=aes(xmin=h, xmax=h+resolution(h), ymin=v, ymax=v+resolution(v), fill=hsv(h,s,v)))+
geom_smooth()
stacked_plots <- p1 + p2+p3 + plot_layout(ncol = 1)
stacked_plots
stacked_plots
pchisq(97.5,80)
qchisq(97.5,80)
qchisq(.975,80)
pnorm(.5)
pnorm(-.5)
pnorm(-6.74671)
pnorm(.74963)-pnorm(-6.74671)
qnorm(.985,0,265/144)
qnorm(.985,0,sqrt(265/144))
pnorm()
pnorm((2.943876-0)/sqrt(265/144))
pnorm((2.943876-0)/sqrt(265/144))-pnorm((-2.943876-0)/sqrt(265/144))
pnorm(3/sqrt(62))-pnorm(-1/sqrt(62))
qnorm(.3,30,sqrt(201))
pnorm((22.565-30)/sqrt(201))
1-pnorm(44,23,sqrt(46))
1-pnorm((44-23)/sqrt(46))
1-pnorm(44,23,sqrt(46),TRUE)
1-pnorm(44,23,sqrt(46),FALSE)
pnorm(44,23,sqrt(46),FALSE)
4/3*qt(.975,8)
pt(3.074,8)-pt(-3.074,8)
pt(3.074*3/4,8)-pt(-3.074*3/4,8)
pt(3.074*3/4,9)-pt(-3.074*3/4,9)
pt(3.074,9)-pt(-3.074,9)
pt(3.074,7)-pt(-3.074,7)
pt(3.074,15)-pt(-3.074,15)
1-pchisq(26,24)
qchisq(.85,16)
pf(5/2,4,5)
1-pf(5/2,4,5)
12/5*qf(.96,9,15)
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat <- mean(x)
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale=theta_hat),type="I")
plot(y,dgamma(y,shape=2,scale=theta_hat),type="1")
plot(y,dgamma(y,shape=2,scale= theta_hat),type=”l”)title("Toby Chappell")
plot(y,dgamma(y,shape=2,scale= theta_hat),type=”l”)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat <- mean(x)
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
theta_hat <- mean(x)/2
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
theta_hat<-mean(x)/2
mean(method_1)
method_1<-c(79,66,57,91,42,59)
method_2<-c(71,43,58,78,20,56)
mean(method_1)
mean(method_2)
var(method_1)
var(method_2)
var(method_1,method_2)
mean(method_1,method_2)
var(method_2)
qnorm(.99,30)
qnorm(.99)
qnorm(.99,0,1.2)
qchisq(.99,29)
qchisq(.99,29,30)
pchisq(.99,29)
pchisq(.99,3-)
pchisq(.99,30)
pnorm(22,20,1025/144)-pnorm(2,20,1025/144)
pnorm(22,20,sqrt(1025/144))-pnorm(2,20,sqrt(1025/144))
qnorm(.985,0,sqrt(265/144))
1-pchisq(44,23)
pchisq(44,23,lower.tail=TRUE)
pchisq(44,23,lower.tail=FALSE)
4/3*qt(.975,8)
1-pchisq(26,24)
1-pf(5/2,4,5)
1-pf(2,4,4)
1-pf(2.5,4,4)
1-pf(2.5,4,4)
x<-c(5.3,4.3,7.7,14.7,11.3)
theta_hat<-mean(x)/2
y<-seq(0,50,.01)
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
title("Toby Chappell")
plot(y,dgamma(y,shape=2,scale= theta_hat))
plot(y,dgamma(y,shape=2,scale= theta_hat),type="l")
alpha<-1-.95
#Population mean estimation
m<-mean(data)
data<-c(79,66,57,91,42,59)
#Population mean estimation
m<-mean(data)
s<-var(data)
n<-length(data)
lb<-m-(qt(1-alpha/2,n-1)*s)/sqrt(n)
ub<-m+(qt(1-alpha/2,n-1)*s)/sqrt(n)
c(lb,ub)
#Population variance estimation
s<-var(data)
n<-length(data)
lb<-((n-1)*s)/qchisq(0.975,n-1)
ub<-((n-1)*s)/qchisq(0.025,n-1)
c(lb,ub)
lb<-((n-1)*s)/qchisq(1-alpha/2,n-1)
ub<-((n-1)*s)/qchisq(alpha,n-1)
c(lb,ub)
ub<-((n-1)*s)/qchisq(alpha/2,n-1)
c(lb,ub)
m
s
lb<-m-(qnorm(1-alpha/2)*p_s)/sqrt(n)
p_s <- 300
#Population mean estimation (sigma^2 known)
m<-mean(data)
n<-length(data)
lb<-m-(qnorm(1-alpha/2)*p_s)/sqrt(n)
ub<-m+(qnorm(1-alpha/2)*p_s)/sqrt(n)
c(lb,ub)
#Ratio of population variance estimation
data1<-c(79,66,57,91,42,59)
data2<-c(80,55,70,91,92,87)
s1<-var(data1)
n1<-length(data1)
s2<-var(data2)
n2<-length(data2)
lb<-s1/(s2*qf(1-alpha/2,n1-1,n2-1))
ub<-s1/(s2*qf(alpha/2,n1-1,n2-1))
c(lb,ub)
library(ggplot2)
setwd("/Users/tobychappell/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = 'archive/2019.csv')
world_happiness <- read.csv(file = 'data/2019.csv')
ggplot(world_happiness,aes(x=GDP,y=score)) + ggpoint()
ggplot(world_happiness,aes(x=GDP,y=score)) + gg_point()
ggplot(world_happiness,aes(x=GDP,y=score)) + geom_point()
View(world_happiness)
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_point()
world_happiness$gdp <- factor(world_happiness$GDP.per.capita,seq(0,1.75,.25))
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,1.75,.25))
ggplot(world_happiness,aes(x=gdp)) + geom_bar()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_bar()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_bar("identity")
ggplot(world_happiness,aes(x=gdp,fill=Score)) + geom_bar("identity")
ggplot(world_happiness,aes(x=gdp,fill=Score)) + geom_bar()
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(score))
library(dplyr)
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(score))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,fill=Score)) + geom_bar()
ggplot(gdp_group,aes(x=score)) + geom_bar()
View(gdp_group)
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
setwd("/Users/tobychappell/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = 'data/2019.csv')
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_point()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.5,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.1))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,..25))
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(data=cut_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_fill_viridis_d()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_line()
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_bar()
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_boxplot()
ggplot(gdp_group,aes(x=gdp,y=Score)) + geom_boxplot()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=Score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.5))
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot() + scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) +
geom_boxplot() +
scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.5))
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) +
geom_boxplot() +
scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_d()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
setwd("/Users/tobychappell/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = 'archive/2019.csv')
world_happiness <- read.csv(file = 'data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon()
<<<<<<< Updated upstream
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(lat)) %>% drop_na()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,10)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_d()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
=======
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = 'archive/2019.csv')
install.packages("dplyr")
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
install.packages("dplyr")
>>>>>>> Stashed changes
packages<-c("ggplot2","tibble","dplyr","tidyr","viridis","mapproj","purrr")
install.packages(setdiff(packages, rownames(installed.packages())))
library(ggplot2)
library(dplyr)
library(tidyr)
library(viridis)
library(maps)
library(mapproj)
library(tibble)
library(purrr)
library(readr)
happiness <- tibble(read_csv("data/happinessdata.csv"))
View(happiness)
View(happiness)
library(ggplot2)
library(dplyr)
library(tidyr)
library(viridis)
world_happiness <- read.csv(file = 'archive/2019.csv')
temp<-read.csv(file='Temperature.csv',strip.white = TRUE)
library(ggplot2)
library(maps)
library(mapproj)
library(readr)
Temperature <- read_csv("data/Temperature.csv")
View(Temperature)
library(readr)
happinessdata <- read_csv("data/happinessdata.csv")
View(happinessdata)
world_happiness <- read.csv(file = '../data/2019.csv')
world_happiness <- read.csv(file = 'data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
# Score vs GDP
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_point()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.5))
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) +
geom_boxplot() +
scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
temp<-read.csv(file='Temperature.csv',strip.white = TRUE)
temp<-read.csv(file='data/Temperature.csv',strip.white = TRUE)
trim.leading <- function (x)  sub("^\\s+", "", x)
temp$Country <- trim.leading(temp$Country)
happiness_temp<-merge(temp,world_happiness,by.x="Country",by.y="Country.or.region")
#BOXPLOT
happiness_temp$temp_cat <- factor(cut(happiness_temp$Temperature,breaks=seq(-10,30,5)))
happiness_temp<-merge(temp,world_happiness,by.x="Country",by.y="Country.or.region")
world_happiness <- read.csv(file = 'data/2019.csv')
temp<-read.csv(file='data/Temperature.csv',strip.white = TRUE)
trim.leading <- function (x)  sub("^\\s+", "", x)
temp$Country <- trim.leading(temp$Country)
happiness_temp<-merge(temp,world_happiness,by.x="Country",by.y="Country.or.region")
#BOXPLOT
happiness_temp$temp_cat <- factor(cut(happiness_temp$Temperature,breaks=seq(-10,30,5)))
ggplot(happiness_temp,aes(x=temp_cat,y=Score,fill=temp_cat)) +
geom_boxplot() +
scale_fill_viridis_d()
#BAR
temp_group <- happiness_temp %>% group_by(temp_cat) %>% summarise(score=mean(Score),count=n())
ggplot(temp_group,aes(x=temp_cat,fill=score)) +
geom_bar()
ggplot(temp_group,aes(x=temp_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
happiness <- read_csv("data/happinessdata.csv")
mid <- mean(happiness$Year)
packages<-c("ggplot2","tibble","dplyr","tidyr","viridis","mapproj","purrr")
install.packages(setdiff(packages, rownames(installed.packages())))
packages<-c("ggplot2","tibble","dplyr","tidyr","viridis","mapproj","purrr")
install.packages(setdiff(packages, rownames(installed.packages())))
