ggplot(world_happiness,aes(x=GDP,y=score)) + gg_point()
ggplot(world_happiness,aes(x=GDP,y=score)) + geom_point()
View(world_happiness)
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_point()
world_happiness$gdp <- factor(world_happiness$GDP.per.capita,seq(0,1.75,.25))
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,1.75,.25))
ggplot(world_happiness,aes(x=gdp)) + geom_bar()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_bar()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_bar("identity")
ggplot(world_happiness,aes(x=gdp,fill=Score)) + geom_bar("identity")
ggplot(world_happiness,aes(x=gdp,fill=Score)) + geom_bar()
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(score))
library(dplyr)
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(score))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,fill=Score)) + geom_bar()
ggplot(gdp_group,aes(x=score)) + geom_bar()
View(gdp_group)
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
setwd("/Users/tobychappell/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = 'data/2019.csv')
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_point()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(0,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.5,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_bar(stat="identity")
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.1))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,..25))
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(data=cut_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
coord_polar("y", start=0) +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_fill_viridis_d()
ggplot(data=gdp_group, aes(x= "", y = score, fill=gdp)) +
geom_col() +
ggtitle("Proportion of Diamonds by Cut") +
xlab("") +
ylab("") +
scale_fill_viridis_d()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_line()
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_bar()
ggplot(world_happiness,aes(x=GDP.per.capita,y=Score)) + geom_boxplot()
ggplot(gdp_group,aes(x=gdp,y=Score)) + geom_boxplot()
ggplot(gdp_group,aes(x=gdp,y=score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=Score)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.5))
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot()
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) + geom_boxplot() + scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) +
geom_boxplot() +
scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.5))
ggplot(world_happiness,aes(x=gdp,y=Score,fill=gdp)) +
geom_boxplot() +
scale_fill_viridis_d()
world_happiness$gdp <- cut(world_happiness$GDP.per.capita,breaks=seq(-.25,2,.25))
gdp_group <- world_happiness %>% group_by(gdp) %>% summarise(score=mean(Score))
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) + geom_bar(stat="identity")
ggplot(gdp_group,aes(x=gdp,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_d()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
setwd("/Users/tobychappell/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = 'archive/2019.csv')
world_happiness <- read.csv(file = 'data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon()
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(lat)) %>% drop_na()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,10)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_d()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
packages<-c("ggplot2","tibble","dplyr","tidyr","viridis","mapproj","purrr")
install.packages(setdiff(packages, rownames(installed.packages())))
library(ggplot2)
library(dplyr)
library(tidyr)
library(viridis)
library(maps)
library(mapproj)
library(tibble)
library(purrr)
library(readr)
happiness <- tibble(read_csv("data/happinessdata.csv"))
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness <- read.csv(file = '../data/2019.csv')
setwd("~/Documents/CS_Courses/CS_710/Workshop1Group3")
world_happiness <- read.csv(file = '../data/2019.csv')
setwd("~/Documents/CS_Courses/CS_710/Workshop1Group3/src")
world_happiness <- read.csv(file = '../data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(lat)) %>% drop_na()
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,10)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-60,70,10)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,fill=score)) +
geom_bar() +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
function (data = NULL, mapping = aes(), ..., environment = parent.frame())
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,2.5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,.5)))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,.05)))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country=="United Kingdom"] <- "UK"
View(happiness_map)
View(world_happiness)
View(world_happiness)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
View(happiness_map)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
View(world_happiness)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Happiness.Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Happiness.Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Happiness.Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=Score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=Score,color=Score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(long))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(long)) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
max(long)
max(latitude$long)
max(latitude$lat)
min(latitude$lat)
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-130,150,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
