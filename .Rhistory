scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,2.5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,1)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score))
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,.5)))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,.05)))
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(lat_group,aes(x=lat_cat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country=="United Kingdom"] <- "UK"
View(happiness_map)
View(world_happiness)
View(world_happiness)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
View(happiness_map)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
View(world_happiness)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Happiness.Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Happiness.Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Happiness.Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=Score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=Score,color=Score)) +
geom_point() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/2019.csv')
world_happiness$Country.or.region[world_happiness$Country.or.region=="United States"] <- "USA"
world_happiness$Country.or.region[world_happiness$Country.or.region=="United Kingdom"] <- "UK"
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country.or.region",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(long))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(long)) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
max(long)
max(latitude$long)
max(latitude$lat)
min(latitude$lat)
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(-130,150,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
setwd("~/Documents/CS_Courses/CS_710/Workshop1Group3")
setwd("~/Documents/CS_Courses/CS_710/Workshop1Group3/src")
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,seq(0,70,5),labels=seq(0,70,5)))
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,breaks=seq(0,70,5),labels=seq(0,70,5)))
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,breaks=seq(0,70,5),labels=seq(0,65,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
title("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
xtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
gtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
gg_title("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
geom_title("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
legend("Happiness Score")
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
guide_legend("Happiness Score")
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
guide_legend(title="Happiness Score") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
scale_fill_viridis_c()
library(ggplot2)
library(maps)
library(mapproj)
library(dplyr)
library(tidyr)
world_happiness <- read.csv(file = '../data/happinessdata.csv')
world_happiness$Country[world_happiness$Country=="United States"] <- "USA"
world_happiness$Country[world_happiness$Country=="United Kingdom"] <- "UK"
world_happiness<-world_happiness %>% group_by(Country) %>% summarise(Score=mean(Happiness.Score)) %>% drop_na()
countries<-map_data("world")
happiness_map<-merge(countries,world_happiness,by.x="region",by.y="Country",all=TRUE)
happiness_map<-arrange(happiness_map,group,order)
#MAP
ggplot(happiness_map,aes(x=long,y=lat,group=group,fill=Score)) +
coord_quickmap() +
geom_polygon() +
scale_fill_viridis_c()
#POINT
latitude<-happiness_map %>% group_by(region) %>% summarise(score=mean(Score),lat=mean(abs(lat))) %>% drop_na()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
scale_color_viridis_c()
#BAR
latitude$lat_cat<-factor(cut(latitude$lat,breaks=seq(0,70,5),labels=seq(0,65,5)))
lat_group <- latitude %>% group_by(lat_cat) %>% summarise(score=mean(score),count=n())
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(fill="Happiness Score") +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
theme_classic()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
theme_classic() +
scale_fill_viridis_c()
#Score versus distance from equator versus
ggplot(lat_group,aes(x=lat_cat,y=score,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
theme_bw() +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(fill="Happiness Score") +
theme_classic() +
scale_fill_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(fill="Happiness Score") +
theme_classic() +
scale_fill_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
ggtitle("Number of Countries vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Number of Countries") +
labs(fill="Happiness Score") +
theme_bw() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
ggtitle("Happiness Score vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(fill="Happiness Score") +
theme_bw() +
scale_color_viridis_c()
ggplot(latitude,aes(x=lat,y=score,color=score)) +
geom_point() +
ggtitle("Happiness Score vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(color="Happiness Score") +
theme_bw() +
scale_color_viridis_c()
#Count versus distance from equator colored by score
ggplot(lat_group,aes(x=lat_cat,y=count,fill=score)) +
geom_bar(stat="identity") +
ggtitle("Happiness vs Distance from Equator") +
xlab(label="Distance from Equator by Latitude") +
ylab(label="Happiness Score") +
labs(fill="Happiness Score") +
theme_classic() +
scale_fill_viridis_c()
